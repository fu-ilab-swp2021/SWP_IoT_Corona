{
  "definitions": {
    "Pass": {
      "properties": {
        "aos": {
          "description": "Acquisition of signal",
          "type": "number"
        },
        "automated": {
          "type": "boolean"
        },
        "callSign": {
          "type": "string"
        },
        "groundStation": {
          "type": "string"
        },
        "id": {
          "format": "number",
          "type": "integer"
        },
        "los": {
          "description": "Loss of signal",
          "type": "number"
        },
        "maxElevation": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        }
      },
      "required": [
        "aos",
        "los",
        "maxElevation",
        "operator",
        "groundStation",
        "automated",
        "callSign"
      ],
      "type": "object"
    },
    "Protocol": {
      "properties": {
        "comments": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "creation": {
          "type": "number"
        },
        "creator": {
          "type": "string"
        },
        "goals": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "format": "number",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "passIds": {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "results": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "satelliteId": {
          "type": "number"
        },
        "status": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "creator",
        "creation",
        "goals",
        "results",
        "comments",
        "status"
      ],
      "type": "object"
    },
    "Satellite": {
      "properties": {
        "id": {
          "format": "number",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "orbit": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        }
      },
      "required": ["id", "name", "payload", "orbit"],
      "type": "object"
    }
  },
  "host": "35.242.238.0",
  "info": {
    "title": "Operation log tool API",
    "version": "1.0"
  },
  "paths": {
    "/api/protocols": {
      "get": {
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All protocols",
            "schema": {
              "items": {
                "$ref": "#/definitions/Protocol"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Get all protocols",
        "tags": ["protocols"]
      }
    },
    "/api/protocols/{protocolId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The protocol was deleted"
          },
          "400": {
            "description": "The protocol could not be deleted"
          },
          "404": {
            "description": "The protocol was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Delete a protocol",
        "tags": ["protocols"]
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The requested protocol",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          },
          "404": {
            "description": "The protocol was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Get a protocol",
        "tags": ["protocols"]
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "description": "The protocol to be updated",
            "in": "body",
            "name": "protocol",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          },
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The updated protocol",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          },
          "400": {
            "description": "The protocol could not be updated"
          },
          "404": {
            "description": "The protocol was not found"
          },
          "409": {
            "description": "The protocol name is already taken. Satellite name has to be unique"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Update a protocol",
        "tags": ["protocols"]
      }
    },
    "/api/protocols/{protocolId}/massPasses": {
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          },
          {
            "description": "The passes to be added",
            "in": "body",
            "name": "passes",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Pass"
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "The created passes",
            "schema": {
              "items": {
                "$ref": "#/definitions/Pass"
              }
            }
          },
          "400": {
            "description": "The passes could not be created"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Add multiple passes to a satellite protocol",
        "tags": ["passes"]
      }
    },
    "/api/protocols/{protocolId}/passIds": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All passIds of a protocol",
            "schema": {
              "items": {
                "type": "number"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "The passIds were not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Get all passIds from a satellite protocol",
        "tags": ["passes"]
      }
    },
    "/api/protocols/{protocolId}/passes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All passes of a protocol",
            "schema": {
              "items": {
                "$ref": "#/definitions/Pass"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "The passes were not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Get all passes from a satellite protocol",
        "tags": ["passes"]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          },
          {
            "description": "The pass to be added",
            "in": "body",
            "name": "pass",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pass"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "The created pass",
            "schema": {
              "$ref": "#/definitions/Pass"
            }
          },
          "400": {
            "description": "The pass could not be created"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Add a pass to a satellite protocol",
        "tags": ["passes"]
      }
    },
    "/api/protocols/{protocolId}/passes/{passId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the pass",
            "in": "path",
            "name": "passId",
            "required": true,
            "type": "number"
          },
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The pass was deleted"
          },
          "400": {
            "description": "The pass could not be deleted"
          },
          "404": {
            "description": "The pass was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Delete a pass",
        "tags": ["passes"]
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the pass",
            "in": "path",
            "name": "passId",
            "required": true,
            "type": "number"
          },
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The requested pass",
            "schema": {
              "$ref": "#/definitions/Pass"
            }
          },
          "404": {
            "description": "The pass was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Get a pass from a satellite protocol",
        "tags": ["passes"]
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "description": "The pass to be updated",
            "in": "body",
            "name": "pass",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pass"
            }
          },
          {
            "description": "ID of the pass",
            "in": "path",
            "name": "passId",
            "required": true,
            "type": "number"
          },
          {
            "description": "ID of the protocol",
            "in": "path",
            "name": "protocolId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The updated pass",
            "schema": {
              "$ref": "#/definitions/Pass"
            }
          },
          "400": {
            "description": "The pass could not be updated"
          },
          "404": {
            "description": "The pass was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Update a pass",
        "tags": ["passes"]
      }
    },
    "/api/satellites": {
      "get": {
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All satellites",
            "schema": {
              "items": {
                "$ref": "#/definitions/Satellite"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Get all satellites",
        "tags": ["satellites"]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The satellite to be added",
            "in": "body",
            "name": "satellite",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Satellite"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "The created satellite",
            "schema": {
              "$ref": "#/definitions/Satellite"
            }
          },
          "400": {
            "description": "The satellite could not be created"
          },
          "409": {
            "description": "The satellite name is already taken. Satellite name has to be unique"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Post a satellite",
        "tags": ["satellites"]
      }
    },
    "/api/satellites/{satelliteId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the satellite",
            "in": "path",
            "name": "satelliteId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The satellite was deleted"
          },
          "400": {
            "description": "The satellite could not be deleted"
          },
          "404": {
            "description": "The satellite was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Delete a satellite",
        "tags": ["satellites"]
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the satellite",
            "in": "path",
            "name": "satelliteId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The requested satellite",
            "schema": {
              "$ref": "#/definitions/Satellite"
            }
          },
          "404": {
            "description": "The satellite was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Get a satellite",
        "tags": ["satellites"]
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "description": "The satellite to be updated",
            "in": "body",
            "name": "satellite",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Satellite"
            }
          },
          {
            "description": "ID of the satellite",
            "in": "path",
            "name": "satelliteId",
            "required": true,
            "type": "number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The updated satellite",
            "schema": {
              "$ref": "#/definitions/Satellite"
            }
          },
          "400": {
            "description": "The satellite could not be updated"
          },
          "404": {
            "description": "The satellite was not found"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Update a satellite",
        "tags": ["satellites"]
      }
    },
    "/api/satellites/{satelliteId}/protocols": {
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "ID of the satellite",
            "in": "path",
            "name": "satelliteId",
            "required": true,
            "type": "number"
          },
          {
            "description": "The protocol to be added",
            "in": "body",
            "name": "protocol",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "All protocols",
            "schema": {
              "$ref": "#/definitions/Protocol"
            }
          },
          "400": {
            "description": "The protocol could not be created"
          },
          "404": {
            "description": "The satelliteId could not be found"
          },
          "409": {
            "description": "The protocol name is already taken. Protocol name has to be unique"
          }
        },
        "security": [
          {
            "OAuth2": ["openid"]
          }
        ],
        "summary": "Post a protocol",
        "tags": ["protocols"]
      }
    }
  },
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "OAuth2": {
      "flow": "password",
      "scopes": {
        "openid": "Grants openid access"
      },
      "tokenUrl": "https://35.242.238.0/auth/realms/operation-log-tool/protocol/openid-connect/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0"
}
